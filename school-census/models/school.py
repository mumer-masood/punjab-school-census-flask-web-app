"""

"""
from datetime import datetime
from sqlalchemy import (Column, Integer, String, DateTime,
                        ForeignKey, Boolean)
from sqlalchemy.orm import relationship

from base_model import QueryMixin


class School(QueryMixin):
    __tablename__ = 'School'
    emiscode = Column(Integer, primary_key=True)
    school_name = Column(String(200))
    dist_id = Column(Integer)
    dist_nm = Column(String(150))
    teh_id = Column(Integer)
    teh_nm = Column(String(150))
    markazid = Column(String(50))
    markaznm = Column(String(150))
    muza = Column(String(150))
    address = Column(String(200))
    village_mohallah = Column(String(200))
    uc_name = Column(String(200))
    uc_no = Column(String(30))
    pp_no = Column(Integer)
    na_no = Column(Integer)
    head_name = Column(String(150))
    nidc_no = Column(String(30))
    head_charge = Column(Integer)
    head_grade = Column(Integer)
    resident_phone = Column(String(20))
    mobile_phone = Column(String(20))
    school_phone = Column(String(20))
    school_email = Column(String(150))
    contact_no = Column(String(20))
    school_status = Column(Integer)
    non_func_reason = Column(String(200))
    medium = Column(Integer)
    school_shift = Column(Integer)
    school_location = Column(Integer)
    gender_register = Column(Integer)
    school_gender = Column(String(20))
    gender_studying = Column(Integer)
    school_level = Column(String(50))
    consolidation_status = Column(Integer)
    school_type = Column(Integer)
    est_year = Column(Integer)
    upgrade_year_pri = Column(Integer)
    upgrade_year_mid = Column(Integer)
    upgrade_year_high = Column(Integer)
    upgrade_year_hsec = Column(Integer)
    bldg_status = Column(Integer)
    bldg_ownship = Column(Integer)
    place_status = Column(Integer)
    construct_type = Column(Integer)
    new_construct_year = Column(Integer)
    bldg_condition = Column(Integer)
    area_kanal = Column(Integer)
    area_marla = Column(Integer)
    covered_area = Column(Integer)
    uncover_kanal = Column(Integer)
    uncover_marla = Column(Integer)
    flood_affected = Column(String(100))
    flood_type = Column(String(150))
    po_bank_name = Column(String(200))
    sc_ac_no = Column(String(30))
    ac_open_date = Column(DateTime)
    ftf_collection = Column(String(50))
    govt_receive = Column(Integer)
    non_govt_receive = Column(Integer)
    amount_before = Column(Integer)
    amount_after = Column(Integer)
    expenses = Column(Integer)
    sc_meetings = Column(Integer)
    sc_total = Column(Integer)
    sc_women = Column(Integer)
    sc_men = Column(Integer)
    parent_member = Column(Integer)
    teacher_member = Column(Integer)
    general_member = Column(Integer)
    new_construct = Column(String(150))
    nsb_bank_name = Column(String(200))
    nsb_ac_no = Column(String(50))
    nsb_ac_date = Column(DateTime)
    nsb_before = Column(String(20))
    nsb_receive = Column(String(50))
    nsb_after = Column(String(50))
    nsb_expenditure = Column(String(50))
    dev_plan_date = Column(DateTime)
    doc = Column(DateTime, default=None)
    record_insert_date = Column(DateTime, default=datetime.utcnow)
    record_update_date = Column(DateTime)
    updated = Column(Boolean, default=0)
    update_tries = Column(Integer, default=0)

    academic_facilities = relationship('AcademicFacilities', uselist=False,
                                       backref='school')
    basic_facilities = relationship('BasicFacilities', backref='school',
                                    uselist=False)
    enrollment = relationship('Enrollment', backref='school',
                                    uselist=False)
    sports_facilities = relationship('SportsFacilities', backref='school',
                                    uselist=False)
    teaching_staff = relationship('TeachingStaff', backref='school',
                                    uselist=False)


class Enrollment(QueryMixin):
    __tablename__ = 'Enrollment'

    # id = Column(Integer, primary_key=True, autoincrement=True)
    emiscode = Column(Integer, ForeignKey('School.emiscode'), primary_key=True)
    eng_kachi_b = Column(Integer)
    eng_kachi_g = Column(Integer)
    eng_cls1_b = Column(Integer)
    eng_cls1_g = Column(Integer)
    eng_cls2_b = Column(Integer)
    eng_cls2_g = Column(Integer)
    eng_cls3_b = Column(Integer)
    eng_cls3_g = Column(Integer)
    eng_cls4_b = Column(Integer)
    eng_cls4_g = Column(Integer)
    eng_cls5_b = Column(Integer)
    eng_cls5_g = Column(Integer)
    eng_cls6_b = Column(Integer)
    eng_cls6_g = Column(Integer)
    eng_cls7_b = Column(Integer)
    eng_cls7_g = Column(Integer)
    eng_cls8_b = Column(Integer)
    eng_cls8_g = Column(Integer)
    eng_cls9_b = Column(Integer)
    eng_cls9_g = Column(Integer)
    eng_cls10_b = Column(Integer)
    eng_cls10_g = Column(Integer)
    cs_cls9 = Column(Integer)
    cs_cls10 = Column(Integer)
    bio_cls9 = Column(Integer)
    bio_cls10 = Column(Integer)
    ee_kachi = Column(Integer)
    ee_cls1 = Column(Integer)
    ee_cls2 = Column(Integer)
    ee_cls3 = Column(Integer)
    ee_cls4 = Column(Integer)
    ee_cls5 = Column(Integer)
    ee_other = Column(Integer)
    total_no_of_students = Column(Integer, default=0)


class TeachingStaff(QueryMixin):
    __tablename__ = 'TeachingStaff'

    # id = Column(Integer, primary_key=True, autoincrement=True)
    emiscode = Column(Integer, ForeignKey('School.emiscode'), primary_key=True)
    sanctioned = Column(Integer)
    filled = Column(Integer)
    vacant = Column(Integer)
